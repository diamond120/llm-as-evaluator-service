"""New Initial migration

Revision ID: b827a9a2d898
Revises: 
Create Date: 2024-05-03 16:37:14.143351+00:00

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b827a9a2d898'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('engagement',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=80), nullable=True),
    sa.Column('description', sa.String(length=300), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('name', name='_engname_uc')
    )
    op.create_table('evaluator_type',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=80), nullable=True),
    sa.Column('description', sa.String(length=300), nullable=True),
    sa.Column('config_schema', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('name', name='_role_uc')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('name', sa.String(length=80), nullable=True),
    sa.Column('profile_pic', sa.String(length=200), nullable=True),
    sa.Column('api_token', sa.String(length=1000), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email', name='_user_email_uc')
    )
    op.create_table('evaluator',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=80), nullable=True),
    sa.Column('evaluator_type_id', sa.Integer(), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.Column('description', sa.String(length=300), nullable=True),
    sa.Column('config', sa.JSON(), nullable=True),
    sa.Column('llm_provider', sa.String(length=80), nullable=True),
    sa.Column('llm_model', sa.String(length=100), nullable=True),
    sa.Column('llm_params', sa.JSON(), nullable=True),
    sa.Column('input_schema', sa.JSON(), nullable=True),
    sa.Column('output_schema', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['evaluator_type_id'], ['evaluator_type.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('name', name='_eval_uc')
    )
    op.create_table('project',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('engagement_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=80), nullable=True),
    sa.Column('description', sa.String(length=300), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['engagement_id'], ['engagement.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('engagement_id', 'name', name='_engagement_project_uc')
    )
    op.create_table('evaluation_configs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('evaluator_id', sa.Integer(), nullable=True),
    sa.Column('config', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['evaluator_id'], ['evaluator.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('evaluator_configs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('evaluator_id', sa.Integer(), nullable=True),
    sa.Column('config', sa.JSON(), nullable=True),
    sa.Column('llm_config', sa.JSON(), nullable=True),
    sa.Column('input_schema', sa.JSON(), nullable=True),
    sa.Column('output_schema', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['evaluator_id'], ['evaluator.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_project_roles',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('project_id', sa.Integer(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'project_id', 'role_id', name='_userrole_project_uc')
    )
    op.create_table('batch_run',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=20), nullable=True),
    sa.Column('inputs', sa.JSON(), nullable=True),
    sa.Column('input_type', sa.String(length=20), nullable=True),
    sa.Column('user_project_role_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_project_role_id'], ['user_project_roles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('run',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('batch_run_id', sa.Integer(), nullable=True),
    sa.Column('user_project_role_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=15), nullable=True),
    sa.Column('item_metadata', sa.JSON(), nullable=True),
    sa.Column('input_hash', sa.String(length=256), nullable=True),
    sa.Column('stage1_left', sa.Integer(), nullable=True),
    sa.Column('stage2_left', sa.Integer(), nullable=True),
    sa.Column('stage1_failed', sa.Integer(), nullable=True),
    sa.Column('stage2_failed', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['batch_run_id'], ['batch_run.id'], ),
    sa.ForeignKeyConstraint(['user_project_role_id'], ['user_project_roles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('evaluation',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('run_id', sa.Integer(), nullable=True),
    sa.Column('batch_run_id', sa.Integer(), nullable=True),
    sa.Column('evaluator_id', sa.Integer(), nullable=True),
    sa.Column('user_project_role_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=80), nullable=True),
    sa.Column('status', sa.String(length=15), nullable=True),
    sa.Column('config', sa.JSON(), nullable=True),
    sa.Column('output', sa.JSON(), nullable=True),
    sa.Column('prompt_tokens_used', sa.Integer(), nullable=True),
    sa.Column('generate_tokens_used', sa.Integer(), nullable=True),
    sa.Column('is_aggregator', sa.Boolean(), nullable=True),
    sa.Column('is_used_for_aggregation', sa.Boolean(), nullable=True),
    sa.Column('fail_reason', sa.String(length=1000), nullable=True),
    sa.Column('evaluator_config_override', sa.JSON(), nullable=True),
    sa.Column('is_dev', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['batch_run_id'], ['batch_run.id'], ),
    sa.ForeignKeyConstraint(['evaluator_id'], ['evaluator.id'], ),
    sa.ForeignKeyConstraint(['run_id'], ['run.id'], ),
    sa.ForeignKeyConstraint(['user_project_role_id'], ['user_project_roles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('evaluation')
    op.drop_table('run')
    op.drop_table('batch_run')
    op.drop_table('user_project_roles')
    op.drop_table('evaluator_configs')
    op.drop_table('evaluation_configs')
    op.drop_table('project')
    op.drop_table('evaluator')
    op.drop_table('users')
    op.drop_table('roles')
    op.drop_table('evaluator_type')
    op.drop_table('engagement')
    # ### end Alembic commands ###
